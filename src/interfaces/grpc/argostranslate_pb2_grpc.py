# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc


from .argostranslate_pb2 import Request, Result

from src.translation.translator import translator_client


class ArgosTranslateStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.translate = channel.unary_unary(
            "/ArgosTranslate/translate",
            request_serializer=Request.SerializeToString,
            response_deserializer=Result.FromString,
        )


class ArgosTranslateServicer(object):
    """Missing associated documentation comment in .proto file."""

    def translate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        translation = translator_client.translate(
            request.text, request.from_lang, request.to_lang
        )
        context.set_code(grpc.StatusCode.OK)
        context.set_details(
            f"translation from {request.from_lang} to {request.to_lang}"
        )
        return Result(text=translation)


def add_ArgosTranslateServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "translate": grpc.unary_unary_rpc_method_handler(
            servicer.translate,
            request_deserializer=Request.FromString,
            response_serializer=Result.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "ArgosTranslate", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ArgosTranslate(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def translate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ArgosTranslate/translate",
            Request.SerializeToString,
            Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
